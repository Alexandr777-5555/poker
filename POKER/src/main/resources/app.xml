<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/c"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
         https://www.springframework.org/schema/util/spring-util.xsd
          http://www.springframework.org/schema/aop
           https://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/cache
           http://www.springframework.org/schema/cache/spring-cache.xsd
           http://www.springframework.org/schema/lang
            http://www.springframework.org/schema/lang/spring-lang.xsd
            http://www.springframework.org/schema/context
            https://www.springframework.org/schema/context/spring-context.xsd">

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--    игроки-->
    <!--    <bean id="player1" class="ps.model.playerIMPL.GamePlayer">-->
    <!--        <constructor-arg value="1"/>-->
    <!--        <constructor-arg value="3000"/>-->
    <!--    </bean>-->

    <!--    <bean id="player2" class="ps.model.playerIMPL.GamePlayer">-->
    <!--        <constructor-arg value="2"/>-->
    <!--        <constructor-arg value="3000"/>-->
    <!--    </bean>-->

    <!--    <bean id="player3" class="ps.model.playerIMPL.GamePlayer">-->
    <!--        <constructor-arg value="3"/>-->
    <!--        <constructor-arg value="3000"/>-->
    <!--    </bean>-->


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--    игровой стол -->

    <!--    <bean id="table" class="ps.model.tableIMPL.GameTable" init-method="init" destroy-method="destroy">-->
    <!--        <constructor-arg>-->
    <!--            <list>-->
    <!--                <ref bean="player1"/>-->
    <!--                <ref bean="player2"/>-->
    <!--                <ref bean="player3"/>-->
    <!--            </list>-->
    <!--        </constructor-arg>-->
    <!--    </bean>-->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <!--     мозг игрока который думает по схеме A-->
    <!--    <bean id="think10" class="ps.SchemeAThink"/>-->

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--               колода карт-->

    <!--    <bean id="cardDesk" class="ps.model.deckIMPL.CardsDeck" lazy-init="true"/>-->


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--    регестрируем реализацию BeanFactoryPostProcessor-->
<!--    <bean id="beanCounter" class="ps.counters.BeanCounter"/>-->

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--    <bean id="checkDealCards" class="ps.aop.CheckDealCards"/>-->


<!--    <bean id="counterDeals" class="ps.counters.DealCounter"/>-->

<!--    <aop:config>-->
<!--        <aop:aspect ref="checkDealCards">-->
<!--            <aop:pointcut id="game" expression="execution(* *.game(..))"/>-->
<!--            <aop:before pointcut-ref="game" method="beforeDealCards"/>-->
<!--            <aop:after pointcut-ref="game" method="afterDealCards"/>-->

<!--        </aop:aspect>-->

<!--        <aop:aspect id="myaspect" ref="counterDeals">-->
<!--            &lt;!&ndash;   объявление точки внедрения&ndash;&gt;-->
<!--            <aop:pointcut id="load" expression="execution(* *.destroy(..))"/>-->

<!--            <aop:before pointcut-ref="load" method="calcBefore"/>-->
<!--            <aop:after pointcut-ref="load" method="calcAfter"/>-->


<!--        </aop:aspect>-->


<!--    </aop:config>-->


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--    поддержка автоматического связывания-->
    <!--    <context:annotation-config/>-->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--    режим автоматического определения компонентов-->
    <!--     регестрируем все экземпляры колоды карт автоматом -->
    <!--    <context:component-scan base-package="ps">-->
    <!--        <context:include-filter type="assignable" expression="ps.model.Deck"/>-->
    <!--    </context:component-scan>-->

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--    <aop:aspectj-autoproxy/>-->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
</beans>